import { deriveChildSeed, hashRegistryEntry } from "./crypto";
import { toHexString } from "./utils";

describe("deriveChildSeed", () => {
  it("should correctly derive a child seed", () => {
    const masterSeed = "c1197e1275fbf570d21dde01a00af83ed4a743d1884e4a09cebce0dd21ae254c";
    const seed = "seed";
    const childSeed = deriveChildSeed(masterSeed, seed);

    expect(childSeed).toEqual("f79cd29b92124c80a662f3085bba98955f7defbaed6e58ea891b901dc99aafc0");
  });
});

describe("hashRegistryValue", () => {
  it("should match siad for equal input", () => {
    // Hard-code expected values to catch any breaking changes.

    // "h" is the hash generated by siad with the same input parameters
    const h = "788dddf5232807611557a3dc0fa5f34012c2650526ba91d55411a2b04ba56164";
    const hash = hashRegistryEntry({
      datakey: "HelloWorld",
      data: "abc",
      revision: 123456789,
    });

    expect(toHexString(hash)).toEqual(h);
  });
});
